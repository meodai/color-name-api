openapi: 3.0.3
info:
  title: Color Name API
  description: An API that provides names for colors based on their hex value
  version: 1.1.0
  license:
    name: MIT
    url: https://github.com/meodai/color-name-api/blob/main/LICENSE
  contact:
    name: meodai
    url: https://elastiq.ch/
    email: color-name-api@elastiq.click
servers:
  - url: https://api.color.pizza/v1/
components:
  schemas:
    listDescription:
      type: object
      properties:
        title:
          type: string
          description: The title of the color name list
        description:
          type: string
          description: A description of the color name list
        url:
          type: string
          description: API endpoint to get the colors of the list
        source:
          type: string
          description: URL to the source of the color name list
        key: 
          type: string
          description: Reference key of the color name list in the API
        license:
          type: string
          description: License of the given color name list
        colorCount:
          type: integer
          description: Amount of colors in the list

    colorBasic:
      type: object
      required:
        - name
        - hex
        - rgb
        - hsl
        - lab
        - luminance
        - luminanceWCAG
        - swatchImg
      properties:
        name:
          type: string
          description: Name of the closest color relative to the hex value provided
          minLength: 1
        hex:
          type: string
          description: Hex value of the color (can differ from the requested hex value)
          pattern: '^#?([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$'
        rgb:
          type: object
          description: RGB values
          required: [r, g, b]
          properties:
            r:
              type: integer
              minimum: 0
              maximum: 255
            g:
              type: integer
              minimum: 0
              maximum: 255
            b:
              type: integer
              minimum: 0
              maximum: 255
        hsl:
          type: object
          description: HSL values. All percentages are represented as integers (e.g., 50% as `50`).
          required: [h, s, l]
          properties:
            h:
              type: number
              minimum: 0
              maximum: 360
            s:
              type: number
              minimum: 0
              maximum: 100
            l:
              type: number
              minimum: 0
              maximum: 100
        lab:
          type: object
          description: LAB values
          required: [l, a, b]
          properties:
            l:
              type: number
              minimum: 0
              maximum: 100
            a:
              type: number
              minimum: -128
              maximum: 127
            b:
              type: number
              minimum: -128
              maximum: 127
        luminance:
          type: number
          description: Luminance value
          minimum: 0
        luminanceWCAG:
          type: number
          description: Luminance value according to WCAG
          minimum: 0
        swatchImg:
          type: object
          description: SVG representation of the color
          required: [svgNamed, svg]
          properties:
            svgNamed:
              type: string
              description: SVG representation of the color with the name
              format: svg
            svg:
              type: string
              description: SVG representation of the color without the name
              format: svg

    color:
      allOf:
        - $ref: '#/components/schemas/colorBasic'
        - type: object
        - required:
            - distance
            - requestedHex
      properties:        
        requestedHex:
          type: string
          description: The hex value that was requested by the user
        distance:
          type: number
          description: The distance between the requested hex value and the closest color (0 = exact match)

    possibleLists:
      type: string
      description: Predefined color lists. Names are case-sensitive.
      enum:
        - default
        - bestOf
        - short
        - wikipedia
        - french
        - spanish
        - german
        - ridgway
        - risograph
        - basic
        - chineseTraditional
        - html
        - japaneseTraditional
        - leCorbusier
        - nbsIscc
        - ntc
        - osxcrayons
        - ral
        - sanzoWadaI
        - thesaurus
        - werner
        - windows
        - x11
        - xkcd

    socketColorResponse:
      type: object
      properties:
        paletteTitle:
          type: string
        list:
          $ref: '#/components/schemas/possibleLists'
        colors:
          type: array
          items:
            $ref: '#/components/schemas/colorBasic'

    error:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
      example:
        status: 404
        message: 'Not Found'

paths:
  /:
    get:
      summary: Get all colors of the default color name list
      description: |
        Returns an array of colors from the specified list, with distance calculations 
        to show how close each match is to the requested colors. When providing multiple 
        values, the endpoint will find the closest match for each color.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  colors:
                    type: array
                    items:
                      $ref: '#/components/schemas/color'
                  paletteTitle:
                    type: string
              example:
                paletteTitle: 'Default color list'
                colors:
                  - name: 'red'
                    hex: 'FF0000'
                    rgb: {r: 255, g: 0, b: 0}
                    hsl: {h: 0, s: 100, l: 50}
                    lab: {l: 53.24, a: 80.09, b: 67.2}
                    luminance: 0.2126
                    luminanceWCAG: 0.2126
                    distance: 0
                    requestedHex: 'FF0000'
                    swatchImg:
                      svgNamed: > 
                        <svg xmlns="http://www.w3.org/2000/svg" width="100" height="...
                      svg: >
                        <svg xmlns="http://www.w3.org/2000/svg" width="100" height="...

        '404':
          description: NOT FOUND
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    parameters:
      - name: list
        in: query
        description: The name of the color name list to use (case-insensitive)
        schema:
          $ref: '#/components/schemas/possibleLists'
        style: form
        explode: false
      
      - name: values
        in: query
        description: A comma-separated list of hex values (e.g., `FF0000,00FF00` do not include the `#`)
        schema:
          type: string
      
      - name: noduplicates
        in: query
        description: Allow duplicate names or not 
        schema:
          type: boolean
  /names/:
    get:
      summary: Get all colors of the default color name list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  colors:
                    type: array
                    items:
                      $ref: '#/components/schemas/colorBasic'

        '404':
          description: NOT FOUND
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'

    parameters:
      - name: name
        in: query
        description: The name of the color to retrieve (min 3 characters)
        schema:
          type: string
        style: form
        explode: false
        required: true
          
      - name: list
        in: query
        description: The name of the color name list to use
        schema:
          $ref: '#/components/schemas/possibleLists'
        style: form
        explode: false

  /lists/:
    get:
      summary: Get all colors of the default color name list
      description: |
        Returns a list of available color name lists with descriptions and URLs to
        the color list endpoints.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  availableColorNameLists:
                    type: array
                    items:
                      type: string
                  listDescriptions:
                    type: object
                    properties:
                      default:
                        $ref: '#/components/schemas/listDescription'
                      bestOf:
                        $ref: '#/components/schemas/listDescription'
                      wikipedia:
                        $ref: '#/components/schemas/listDescription'
                      french:
                        $ref: '#/components/schemas/listDescription'
                      spanish:
                        $ref: '#/components/schemas/listDescription'
                      german:
                        $ref: '#/components/schemas/listDescription'
                      ridgway:
                        $ref: '#/components/schemas/listDescription'
                      risograph:
                        $ref: '#/components/schemas/listDescription'
                      basic:
                        $ref: '#/components/schemas/listDescription'
                      chineseTraditional:
                        $ref: '#/components/schemas/listDescription'
                      html:
                        $ref: '#/components/schemas/listDescription'
                      japaneseTraditional:
                        $ref: '#/components/schemas/listDescription'
                      leCorbusier:
                        $ref: '#/components/schemas/listDescription'
                      nbsIscc:
                        $ref: '#/components/schemas/listDescription'
                      ntc:
                        $ref: '#/components/schemas/listDescription'
                      osxcrayons:
                        $ref: '#/components/schemas/listDescription'
                      ral:
                        $ref: '#/components/schemas/listDescription'
                      sanzoWadaI:
                        $ref: '#/components/schemas/listDescription'
                      thesaurus:
                        $ref: '#/components/schemas/listDescription'
                      werner:
                        $ref: '#/components/schemas/listDescription'
                      windows:
                        $ref: '#/components/schemas/listDescription'
                      x11:
                        $ref: '#/components/schemas/listDescription'
                      xkcd:
                        $ref: '#/components/schemas/listDescription'

        '404':
          description: NOT FOUND
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    
  /swatch/:
    get:
      summary: Generate a color swatch for any color
      description: |
        Generates an SVG swatch representation of a color. The swatch can include 
        the color name if provided. The SVG is designed to be visually appealing 
        and readable across different backgrounds.
      parameters:
        - name: color
          in: query
          description: The hex value of the color to retrieve without '#' 
          schema:
            type: string
          style: form
          explode: false
          required: true
        - name: name
          in: query
          description: The name of the color
          schema:
            type: string
          style: form
          explode: false
          required: false
      responses:
        '200':
          description: OK
          content:
            image/svg+xml:
              schema:
                type: string
        '404':
          description: NOT FOUND
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        
x-socket-io:
  version: "4.x"
  events:
    - name: colors
      description: Emitted when new colors are requested
      payload:
        $ref: '#/components/schemas/socketColorResponse'
      direction: server-to-client
  authentication: 
    required: false
  cors:
    enabled: true
    origins:
      description: Controlled via ALLOWED_SOCKET_ORIGINS environment variable
      default: ["http://localhost:8080"]